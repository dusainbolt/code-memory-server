# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Blog {
  content: [BlogContent!]!
  createBy: String!
  createdAt: String!
  description: String!
  id: ID!
  slug: String!
  title: String!
  updatedAt: String!
}

type BlogContent {
  data: String!
  language: String!
  type: Float!
}

input BlogContentInput {
  data: String!
  language: String!
  type: Float!
}

input CreateBlogInput {
  content: [BlogContentInput!]!
  createBy: String!
  description: String!
  title: String!
}

input CreateTagInput {
  description: String!
  status: TagStatus!
  thumbnail: String!
  title: String!
}

input CreateUser {
  age: Float!
  avatar: String!
  email: String!
  firstName: String!
  gender: Float!
  items: [String!]!
  lastName: String!
  password: String!
}

input EntireTagInput {
  status: [TagStatus!]!
}

input FindTagBySlugInput {
  slug: String!
}

"""The gender of user"""
enum Gender {
  FEMALE @deprecated(reason: "This is female")
  MALE @deprecated(reason: "This is male")
  OTHER @deprecated(reason: "This is ...")
}

input LoginInput {
  credential: String!
  password: String!
}

type LoginOutput {
  token: String!
  user: User!
}

type Mutation {
  createBlog(input: CreateBlogInput!): Blog!
  createTag(input: CreateTagInput!): Tag!
  createUser(input: CreateUser!): User!
  login(input: LoginInput!): LoginOutput!
  updateTag(input: UpdateTagInput!): Tag!
}

type OutputSearchTag {
  dataTags: [Tag!]!
  total: Int!
}

type Query {
  entireTags(input: EntireTagInput!): [Tag!]!
  findTagBySlug(input: FindTagBySlugInput!): Tag!
  initData: String!
  listTags(input: SearchTagInput!): OutputSearchTag!
  seoHome: SeoHomeDTO!
}

"""The role of user"""
enum Role {
  ADMIN @deprecated(reason: "This is admin")
  CREATOR
  USER @deprecated(reason: "This is user")
}

input SearchTagInput {
  key: String = null
  limit: Int = null
  offset: Int = null
  orderBy: String = ""
  sortBy: Int = null
  status: [TagStatus!]!
}

type SeoHomeDTO {
  description: String!
  domain: String!
  facebookAppId: String!
  faviconUrlICO: String!
  faviconUrlJPG: String!
  history: [SeoHomeHistory!]!
  id: ID!
  languageAlternates: String!
  logo400x400: String!
  logo800x600: String!
  logo1280x1280: String!
  logoAlt: String!
  searchBoxUrl: String!
  siteName: String!
  status: SeoHomeStatus!
  title: String!
}

type SeoHomeHistory {
  newValue: String!
  oldValue: String!
  type: String!
}

input SeoHomeHistoryInput {
  newValue: String!
  oldValue: String!
  type: String!
}

"""The SeoHomeStatus."""
enum SeoHomeStatus {
  ACTIVE
  INACTIVE
}

type Tag {
  createBy: String!
  createdAt: String!
  description: String!
  id: ID!
  slug: String!
  status: TagStatus!
  tagType: TagType!
  thumbnail: String!
  title: String!
  updatedAt: String!
  userCreate: User!
}

"""The TagStatus."""
enum TagStatus {
  ACTIVE
  HIDE
}

"""The TagType."""
enum TagType {
  ADDITION
  SYSTEM
}

input UpdateTagInput {
  data: CreateTagInput!
  tagId: String!
}

type User {
  avatar: String!
  createdAt: String!
  email: String!
  facebook: String!
  firstName: String!
  gender: Gender!
  id: ID!
  lastName: String!
  password: String!
  phone: String!
  roles: [Role!]!
  status: UserStatus!
  updatedAt: String!
  username: String!
}

"""The status of user"""
enum UserStatus {
  ACTIVE @deprecated(reason: "This is active")
  BLOCK @deprecated(reason: "This is block")
  INACTIVE @deprecated(reason: "This is inactive")
  PAUSE @deprecated(reason: "This is pause")
}
